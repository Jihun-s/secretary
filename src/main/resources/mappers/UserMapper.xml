<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.softsociety.secretary.dao.UserMapper">
    <insert id="insertUser" parameterType="User">
        INSERT INTO secretary_user (
            user_id, user_email, user_name, user_nickname, user_pw, user_profileimg,
            enabled, family_id, birthday, sex, verification_token, verification_token_expiry_date)
        VALUES (
            #{userId}, #{userEmail, jdbcType=VARCHAR}, #{userName, jdbcType=VARCHAR},
            #{userNickname, jdbcType=VARCHAR}, #{userPw, jdbcType=VARCHAR},
            #{userProfileimg, jdbcType=VARCHAR}, #{enabled, jdbcType=INTEGER},
            #{familyId, jdbcType=BIGINT}, #{birthday}, #{sex, jdbcType=INTEGER},
            #{verificationToken, jdbcType=VARCHAR}, #{verificationTokenExpiryDate, jdbcType=TIMESTAMP})
    </insert>

    <select id="findByVerificationToken" parameterType="String" resultType="User">
        SELECT * FROM secretary_user WHERE verification_token = #{token}
    </select>
	<update id="enableUser" parameterType="String">
	    UPDATE secretary_user
	    SET enabled = 1
	    WHERE verification_token = #{token}
	</update>
	
	<select id="findByEmailOrUserId" resultType="User">
	    SELECT * FROM secretary_user
	    WHERE user_email = #{emailOrUserId} OR user_id = #{emailOrUserId}
	</select>

    <select id="countByEmail" resultType="int">
        SELECT COUNT(*) FROM secretary_user WHERE user_email = #{userEmail}
    </select>
    
    <select id="countByUserId" resultType="int">
        SELECT COUNT(*) FROM secretary_user WHERE user_id = #{userId}
    </select>
    <update id="updateUser" parameterType="User">
	    UPDATE secretary_user
	    SET verification_token = #{verificationToken},
	        verification_token_expiry_date = #{verificationTokenExpiryDate, jdbcType=TIMESTAMP}
	    WHERE user_id = #{userId} OR user_email = #{userEmail}
	</update>
    <update id="updateUserPw" parameterType="User">
	    UPDATE secretary_user
	    SET user_pw = #{userPw}
	    WHERE user_id = #{userId} OR user_email = #{userEmail}
	</update>
	
	<!-- 관리자 기능 유저목록-인찬 -->
	<select id="findALL" resultType="User">
	select * from secretary_user
	</select>
	
	<!-- 관리자 기능 유저 정보 편집 -->
	<update id = "editUser" parameterType="User">
	UPDATE secretary_user
	SET  
		 user_nickname = #{userNickname}
         ,enabled = #{enabled}
         ,rolename = #{rolename}
         ,family_id = #{familyId}
         ,sex  = #{sex}     
	WHERE user_id = #{userId}
	</update>
	
	<!-- 유저 일일로그인 조회 -->
	<select id="getDailyLoginData" resultType="Log">
        SELECT TO_CHAR(LOGIN, 'YYYY-MM-DD') AS login_date, COUNT(*) AS daily_login_count
        FROM secretary_logstat
        WHERE log_message = '로그인이 발생하였습니다'
        GROUP BY TO_CHAR(LOGIN, 'YYYY-MM-DD')
        ORDER BY TO_CHAR(LOGIN, 'YYYY-MM-DD')
    </select>
    
    <!-- 유저 시간별 로그인 조회 -->
    <select id="getHourlyLoginData" resultType="Log">
    SELECT TO_NUMBER(TO_CHAR(LOGIN, 'HH24')) AS loginHour, COUNT(*) AS loginCount
    FROM secretary_logstat
    WHERE TO_CHAR(LOGIN, 'YYYY-MM-DD') BETWEEN TO_CHAR(sysdate - 7, 'YYYY-MM-DD') AND TO_CHAR(sysdate, 'YYYY-MM-DD')
    GROUP BY TO_NUMBER(TO_CHAR(LOGIN, 'HH24'))
    ORDER BY TO_NUMBER(TO_CHAR(LOGIN, 'HH24'))
    </select>
    
    <!-- 일일 회원가입자 수  -->
    <select id="getDailyJoinData" resultType="User">
    SELECT TO_CHAR(verification_token_expiry_date, 'YYYY-MM-DD') AS joinDate,
       COUNT(*) AS joinCount
       FROM secretary_user
    GROUP BY TO_CHAR(verification_token_expiry_date, 'YYYY-MM-DD')
    ORDER BY TO_DATE(TO_CHAR(verification_token_expiry_date, 'YYYY-MM-DD'), 'YYYY-MM-DD')
	</select>
	
	<!-- 로그보드 -->
	<select id="getLogData" resultType="AllLog">
	SELECT LOG_time, user_id, log_action, log_message
    FROM secretary_alllog
	</select>
	
	<!-- 로그인보드 -->
	<select id="getLoginData" resultType="Log">
	select login, logout, user_id, log_message
	FROM secretary_logstat
	</select>
	
	<!-- 특정유저 활동량 조회 -->
    <select id="getUserLoginData" parameterType="User" resultType="Log">
    SELECT TO_NUMBER(TO_CHAR(LOGIN, 'HH24')) AS loginHour, COUNT(*) AS loginCount
    FROM secretary_logstat
    WHERE TO_CHAR(LOGIN, 'YYYY-MM-DD') BETWEEN TO_CHAR(sysdate - 7, 'YYYY-MM-DD') AND TO_CHAR(sysdate, 'YYYY-MM-DD')
    AND user_id = #{userId}
    GROUP BY TO_NUMBER(TO_CHAR(LOGIN, 'HH24'))
    ORDER BY TO_NUMBER(TO_CHAR(LOGIN, 'HH24'))
    </select>
    
    <!-- 특정유저 컨텐츠별 이용률 조회 -->
    <select id="getActRateData" parameterType="String" resultType="AllLog">    
    SELECT log_type, COUNT(*) as actionCount
    FROM secretary_alllog
    WHERE user_id = #{userId}
    GROUP BY log_type
    </select>
</mapper>